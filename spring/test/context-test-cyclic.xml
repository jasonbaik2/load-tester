<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ctx="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<import resource="file:spring/context-controller.xml" />

	<util:list id="brokers" value-type="me.jasonbaik.loadtester.valueobject.Broker">
		<bean class="me.jasonbaik.loadtester.valueobject.Broker">
			<property name="url" value="tcp://172.31.12.139:61616" />
			<property name="jmxUrl" value="service:jmx:rmi:///jndi/rmi://localhost:1099/karaf-root" />
			<property name="username" value="admin" />
			<property name="password" value="admin" />
		</bean>
	</util:list>

	<bean id="senderConfig" class="me.jasonbaik.loadtester.sender.impl.RoundRobinMQTTPublisherConfig">
		<property name="mqttBroker" value="tcp://172.31.12.139:1883" />
		<property name="mqttBrokerUsername" value="admin" />
		<property name="mqttBrokerPassword" value="admin" />
		<property name="keyStore" value="keystore/client.ks" />
		<property name="keyStorePassword" value="password" />
		<property name="trustStore" value="keystore/client.ks" />
		<property name="trustStorePassword" value="password" />
		<property name="duration" value="30" />
		<property name="durationUnit" value="MINUTES" />
		<property name="numConnections" value="5000" />
		<property name="messagePoolSize" value="5000" />
		<property name="messageByteLength" value="1024" />
		<property name="qos" value="EXACTLY_ONCE" />
		<property name="keepAliveIntervalMilli" value="0" />
		<property name="connectionStepSize" value="1000" />
		<property name="connectionStepIntervalMilli" value="10000" />
		<property name="topic" value="mqtt/attack" />
	</bean>

	<bean id="samplerConfig" class="me.jasonbaik.loadtester.sampler.impl.CyclicSamplerConfig">
		<property name="interval" value="12" />
		<property name="intervalUnit" value="MILLISECONDS" />
	</bean>

	<bean id="receiverConfig" class="me.jasonbaik.loadtester.receiver.impl.SynchronousMQTTReplyingJMSConsumerConfig">
		<property name="jmsBroker" value="tcp://172.31.12.139:61616" />
		<property name="jmsBrokerUsername" value="admin" />
		<property name="jmsBrokerPassword" value="admin" />
		<property name="queue" value="mqtt.attack.queue" />
		<property name="mqttBroker" value="tcp://172.31.12.139:1883" />
		<property name="mqttBrokerUsername" value="admin" />
		<property name="mqttBrokerPassword" value="admin" />
		<property name="keyStore" value="keystore/client.ks" />
		<property name="keyStorePassword" value="password" />
		<property name="trustStore" value="keystore/client.ks" />
		<property name="trustStorePassword" value="password" />
		<property name="qos" value="EXACTLY_ONCE" />
	</bean>

	<util:list id="scenarios" value-type="me.jasonbaik.loadtester.valueobject.Scenario">
		<bean class="me.jasonbaik.loadtester.valueobject.Scenario">
			<property name="name" value="n_1_publish_1_1_subscribe_cyclic" />
			<property name="sends" ref="sends" />
			<property name="receives" ref="receives" />
			<property name="reportDir" value="report" />
		</bean>
	</util:list>

	<util:list id="sends" value-type="me.jasonbaik.loadtester.valueobject.Send">
		<bean class="me.jasonbaik.loadtester.valueobject.Send">
			<property name="name" value="send1" />
			<property name="samplerConfig" ref="samplerConfig" />
			<property name="senderConfig" ref="senderConfig" />
		</bean>
		<bean class="me.jasonbaik.loadtester.valueobject.Send">
			<property name="name" value="send2" />
			<property name="samplerConfig" ref="samplerConfig" />
			<property name="senderConfig" ref="senderConfig" />
		</bean>
		<bean class="me.jasonbaik.loadtester.valueobject.Send">
			<property name="name" value="send3" />
			<property name="samplerConfig" ref="samplerConfig" />
			<property name="senderConfig" ref="senderConfig" />
		</bean>
		<bean class="me.jasonbaik.loadtester.valueobject.Send">
			<property name="name" value="send4" />
			<property name="samplerConfig" ref="samplerConfig" />
			<property name="senderConfig" ref="senderConfig" />
		</bean>
	</util:list>

	<util:list id="receives" value-type="me.jasonbaik.loadtester.valueobject.Receive">
		<bean class="me.jasonbaik.loadtester.valueobject.Receive">
			<property name="name" value="receive1" />
			<property name="receiverConfig" ref="receiverConfig" />
		</bean>
	</util:list>

</beans>