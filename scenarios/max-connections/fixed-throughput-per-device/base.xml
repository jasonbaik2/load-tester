<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ctx="http://www.springframework.org/schema/context" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<util:list id="brokers" value-type="me.jasonbaik.loadtester.valueobject.Broker">
		<bean class="me.jasonbaik.loadtester.valueobject.Broker">
			<property name="hostname" value="172.31.5.252" />
			<property name="jmxUrl" value="service:jmx:rmi:///jndi/rmi://172.31.5.252:1099/karaf-root" />
			<property name="username" value="admin" />
			<property name="password" value="admin" />
			<property name="connectors">
				<util:map>
					<entry key="MQTT">
						<bean class="me.jasonbaik.loadtester.valueobject.Connector">
							<property name="protocol" value="MQTT" />
							<property name="port" value="1883" />
						</bean>
					</entry>
					<entry key="JMS">
						<bean class="me.jasonbaik.loadtester.valueobject.Connector">
							<property name="protocol" value="JMS" />
							<property name="port" value="61616" />
						</bean>
					</entry>
				</util:map>
			</property>
		</bean>
	</util:list>

	<bean id="senderConfigBase" class="me.jasonbaik.loadtester.sender.impl.FixedThroughputPerConnectionMQTTPublisherConfig" abstract="true">
		<property name="brokers" ref="brokers" />
		<property name="ssl" value="false" />
		<property name="trace" value="true" />
		<property name="keyStore" value="keystore/client.ks" />
		<property name="keyStorePassword" value="password" />
		<property name="trustStore" value="keystore/client.ks" />
		<property name="trustStorePassword" value="password" />
		<property name="numConnections" value="1000000" />
		<property name="messagePoolSize" value="5000" />
		<property name="messageByteLength" value="1024" />
		<property name="qos" value="EXACTLY_ONCE" />
		<property name="keepAliveIntervalMilli" value="0" />
		<property name="topic" value="mqtt/attack" />
		<property name="newConnectionInterval" value="200" />
		<property name="newConnectionIntervalUnit" value="MILLISECONDS" />
		<property name="connectionStepSize" value="2" />
		<property name="duration" value="10" />
		<property name="durationUnit" value="MINUTES" />
	</bean>

	<bean id="receiverConfig" class="me.jasonbaik.loadtester.receiver.impl.SynchronousMQTTReplyingJMSConsumerConfig">
		<property name="brokers" ref="brokers" />
		<property name="ssl" value="false" />
		<property name="queue" value="mqtt.attack.queue" />
		<property name="keyStore" value="keystore/client.ks" />
		<property name="keyStorePassword" value="password" />
		<property name="trustStore" value="keystore/client.ks" />
		<property name="trustStorePassword" value="password" />
		<property name="qos" value="EXACTLY_ONCE" />
	</bean>

	<util:list id="scenarios" value-type="me.jasonbaik.loadtester.valueobject.Scenario">
		<bean class="me.jasonbaik.loadtester.valueobject.Scenario">
			<property name="name" value="n_1_publish_1_1_subscribe_max_connections" />
			<property name="brokers" ref="brokers" />
			<property name="sends" ref="sends" />
			<property name="receives" ref="receives" />
			<property name="reportDir" value="report" />
		</bean>
	</util:list>

	<util:list id="sends" value-type="me.jasonbaik.loadtester.valueobject.Send">
		<bean class="me.jasonbaik.loadtester.valueobject.Send">
			<property name="name" value="send1" />
			<property name="senderConfig" ref="senderConfig" />
		</bean>
		<bean class="me.jasonbaik.loadtester.valueobject.Send">
			<property name="name" value="send2" />
			<property name="senderConfig" ref="senderConfig" />
		</bean>
		<bean class="me.jasonbaik.loadtester.valueobject.Send">
			<property name="name" value="send3" />
			<property name="senderConfig" ref="senderConfig" />
		</bean>
		<bean class="me.jasonbaik.loadtester.valueobject.Send">
			<property name="name" value="send4" />
			<property name="senderConfig" ref="senderConfig" />
		</bean>
	</util:list>

	<util:list id="receives" value-type="me.jasonbaik.loadtester.valueobject.Receive">
		<bean class="me.jasonbaik.loadtester.valueobject.Receive">
			<property name="name" value="receive1" />
			<property name="receiverConfig" ref="receiverConfig" />
		</bean>
		<bean class="me.jasonbaik.loadtester.valueobject.Receive">
			<property name="name" value="receive2" />
			<property name="receiverConfig" ref="receiverConfig" />
		</bean>
		<bean class="me.jasonbaik.loadtester.valueobject.Receive">
			<property name="name" value="receive3" />
			<property name="receiverConfig" ref="receiverConfig" />
		</bean>
		<bean class="me.jasonbaik.loadtester.valueobject.Receive">
			<property name="name" value="receive4" />
			<property name="receiverConfig" ref="receiverConfig" />
		</bean>
	</util:list>

</beans>